name: CondaBuildMacOS

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  MACOSX_DEPLOYMENT_TARGET: 10.15
  CONDA_BUILD_SYSROOT: /Applications/Xcode_11.4.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk
  GITHUB_WORKFLOW: CondaBuildMacOS

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        python-version: ["3.7.9"]
    steps:
    - uses: actions/checkout@v2
    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('.github/macos-environment.yml') }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: .github/macos-environment.yml
        activate-environment: tracking
        python-version: ${{ matrix.python-version }}
        channels: main
        auto-activate-base: true
        auto-update-conda: true
        use-only-tar-bz2: true
    - name: Build
      shell: bash -l {0}
      working-directory: ${{runner.workspace}}
      run: |
        conda info
        conda list
        cd $GITHUB_WORKSPACE/conda
        cat meta.yaml
        echo "running command:"
        p=${GITHUB_REF##*/}
        echo sed -i \'\' -e "s/master/"$p"/g" meta.yaml
        sed -i \'\' -e "s/master/"$p"/g" meta.yaml
        echo "running conda build"
        cat meta.yaml
        conda build .
        echo $CONDA_PREFIX
        conda create -y -n test -c $CONDA_PREFIX/conda-bld/ trex && conda activate test && pvinfo -opencv_ffmpeg_support
