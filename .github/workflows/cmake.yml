name: CondaBuild

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"] #, "macos-latest", "windows-latest"]
        python-version: ["3.7"]
    steps:
    - uses: actions/checkout@v2
    - name: Cache conda
      uses: actions/cache@v1
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('.github/environment.yml') }}
    - uses: conda-incubator/setup-miniconda@v1
      with:
        environment-file: .github/environment.yml
        activate-environment: tracking
        python-version: ${{ matrix.python-version }}
        channels: main,conda-forge
        auto-activate-base: true
        auto-update-conda: true
        use-only-tar-bz2: true
    - shell: bash -l {0}
      run: |
        conda info
        conda list
    - shell: pwsh
      run: |
        conda info
        conda list

    - name: Build
      working-directory: ${{runner.workspace}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        cd $GITHUB_WORKSPACE/conda
        conda build . -c main -c conda-forge
